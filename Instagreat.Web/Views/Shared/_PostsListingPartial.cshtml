@model AllPostsViewModel
<div>
    @foreach (var post in Model.AllPosts)
    {
        <div>
            <div class="row">
                <h3 class="col-md-12">@post.Description</h3>
            </div>
            <div class="row" style="align-content:center">
                <img src="@post.Image" width="400px" height="400px" class="img-responsive col-md-12" />
            </div>
            <div class="row">
                <h3 class="col-md-12">Posted on @post.PublishTime.ToShortDateString()</h3>
            </div>
            @if (post.User != null)
            {
                <div class="row" style="align-content:center">
                    <h3 class="col-md-12">Author - <a asp-controller="Users" asp-action="Profile" asp-route-username="@post.User.UserName">@post.User.UserName</a></h3>
                </div>
            }
            @await Html.PartialAsync("_CommentAndLikePartial", post)

            <div class="row button">
                <a asp-controller="Users" asp-action="PostDetails" asp-route-id="@post.Id" class="col-md-2">Show Comments</a>
            </div>
        </div>
        @if (User.IsInRole(RolesConstants.ADMINISTRATOR_ROLE))
        {
            <div class="row button">
                <form method="post" onclick="return confirm('Are you sure you want to delete this?')" asp-controller="Admins" asp-action="DeletePost" asp-route-id="@post.Id">
                    <input type="submit" class="col-md-2 btn btn-danger" value="Delete Post" />
                </form>
            </div>
        }

        else if (post.User.UserName == User.Identity.Name)
        {
            <div class="row button">
                <form method="post" onclick="return confirm('Are you sure you want to delete this?')" asp-controller="Users" asp-action="DeletePost" asp-route-postId="@post.Id" asp-route-userId="@post.UserId">
                    <input type="submit" class="col-md-2 btn btn-danger" value="Delete Post" />
                </form>
            </div>
        }
        <hr />
    }

    @{
        var currentController = ViewContext.RouteData.Values["controller"];
        var currentAction = ViewContext.RouteData.Values["action"];
        var previousDisabled = Model.CurrentPage == 1 ? "disabled" : string.Empty;
        var nextDisabled = Model.CurrentPage == Model.TotalPages ? "disabled" : string.Empty;
    }
    <ul class="pagination justify-content-center">
        <li class="page-item @previousDisabled">
            <a class="page-link @previousDisabled" href="/@currentController/@currentAction/@Model.Username?page=@Model.PreviousPage" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
                <span class="sr-only">Previous</span>
            </a>
        </li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.CurrentPage == i ? "active" : string.Empty) "><a class="page-link" href="/@currentController/@currentAction/@Model.Username?page=@i">@i</a></li>
        }
        <li class="page-item @nextDisabled">
            <a class="page-link @nextDisabled" href="/@currentController/@currentAction/@Model.Username?page=@Model.NextPage" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
    </ul>
</div>